 # Ensure chimera compiler (chimera-cc) is built and in PATH 
# Compile dependencies first if necessary (e.g., core libraries) 
echo "Compiling BDIOS Services..." 
chimera-cc bdios/services/
 memory_allocator.ch -o build/services/allocator.bdi --target=bdi # Specify BDI output 
chimera-cc bdios/services/
 scheduler.ch -o build/services/scheduler.bdi --target=bdi 
chimera-cc bdios/services/
 event_dispatcher.ch -o build/services/events.bdi --target=bdi 
chimera-cc bdios/services/
 network.ch -o build/services/network.bdi --target=bdi # Includes TCP/IP/UDP/ARP logic now 
chimera-cc bdios/services/
 filesystem.ch -o build/services/filesystem.bdi --target=bdi # Includes full file ops 
chimera-cc bdios/services/
 gui.ch bdios/services/
 echo "Compiling Initial Tasks..." 
chimera-cc bdios/tasks/
 gui_rendering.ch -o build/services/gui.bdi --target=bdi # Compile multiple files for one servi
 idle_task.ch -o build/tasks/idle.bdi --target=bdi 
# Compile other init tasks (e.g., driver loaders) 
echo "Generating Genesis Graph..." 
# Assume a tool or script uses GenesisGraph.cpp logic, linking compiled service/task entry points 
generate-genesis --output build/genesis.bdi --allocator build/services/allocator.bdi --scheduler build/services/scheduler.bdi --events build/s
